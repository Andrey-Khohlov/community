Описание структуры
1. api/
endpoints/: Реализация API-эндпоинтов для работы с данными:
auth.py: Регистрация, вход и авторизация.
coffee.py: Работа с сортами кофе (создание, редактирование, получение списка).
reviews.py: Добавление и управление отзывами.
chats.py: Работа с чатом под обсуждениями.
users.py: Управление профилями пользователей.
schemas.py: Pydantic-схемы для валидации данных.
dependencies.py: Зависимости (например, текущий пользователь).

## Пример задач, решаемых через dependencies.py
Авторизация и текущий пользователь:
Получение текущего пользователя из токена.
Проверка роли или прав доступа.
Доступ к базе данных:
Создание и управление сессией SQLAlchemy.
Общие параметры запросов:
Пагинация, фильтры и сортировка.
Обработка исключений:
Унифицированная проверка перед выполнением логики эндпоинтов.

2. core/
config.py: Настройки проекта, включая переменные окружения.
security.py: Реализация токенов (JWT) и шифрования.
utils.py: Вспомогательные утилиты.
3. db/
models/: SQLAlchemy-модели:
user.py: Пользователи (профили).
coffee.py: Сорта кофе.
review.py: Отзывы.
chat.py: Чаты для обсуждений.
message.py: Сообщения в чатах.
session.py: Создание и управление сессиями базы данных.
migrations/: Миграции для управления схемой базы данных.
4. services/
Логика для работы с данными:
coffee_service.py: Операции с сортами кофе.
chat_service.py: Работа с чатами и сообщениями.
review_service.py: Управление отзывами.
user_service.py: Управление пользователями.
5. tasks/
celery_app.py: Настройка Celery.
notification_tasks.py: Асинхронные задачи, например, уведомления о новых сообщениях в чате.
6. docker/
Dockerfile: Описание сборки контейнера.
docker-compose.yml: Конфигурация для запуска Redis, PostgreSQL и приложения.
celery/: Данные для Celery.
7. scripts/
Скрипты для запуска и инициализации проекта:
init_db.py: Инициализация базы данных.
seed_data.py: Заполнение базы тестовыми данными.
run_celery_worker.sh: Скрипт запуска Celery Worker.
8. .env
Переменные окружения: ключи, параметры базы данных, Redis и т. д.
9. Тесты
Юнит-тесты для API и сервисов, включая фикстуры (conftest.py).