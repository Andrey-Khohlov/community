"""Initial migration

Revision ID: 1c67a0491c09
Revises: 
Create Date: 2025-03-07 23:31:54.356894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1c67a0491c09'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('coffees')
    op.drop_table('coffee_сhats')
    op.drop_table('users')
    op.drop_table('comments')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('review_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('coffee_сhats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('origin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('roast_level', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('flavor_profile', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='coffee_сhats_pkey')
    )
    op.create_table('coffees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('roaster', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('roasting_level', postgresql.ENUM('filter', 'spro', 'milk', name='roastinglevel'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('q_grade_rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('origin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('farm', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('farmer', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('variety', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('processing', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('height_min', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('height_max', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('yield_', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('reviews', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comments', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pack_img', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='coffees_pkey')
    )
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('coffee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('rating_2', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating_4', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating_20', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pack_img', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('receipt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('water', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('water_ppm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('water_pH', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('water_receipt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('grinder', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('grinding', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('filter', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cafe', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reviews_pkey')
    )
    # ### end Alembic commands ###
