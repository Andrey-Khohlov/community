"""Change reviews table

Revision ID: 5f35828ddd95
Revises: 3d0caf18f80c
Create Date: 2025-03-10 00:04:05.214115

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f35828ddd95'
down_revision: Union[str, None] = '3d0caf18f80c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('coffees', 'locality',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'cooperatives',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'mill',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'exporter',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'importer',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'tags',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'notes',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('coffees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.add_column('reviews', sa.Column('rating', sa.Float(), nullable=True))
    op.add_column('reviews', sa.Column('brew_time', sa.String(length=256), nullable=True))
    op.add_column('reviews', sa.Column('experience', sa.String(), nullable=True))

    # Преобразуем "V60" в "pourover" (или другое допустимое значение)
    op.execute("""
            UPDATE reviews
            SET method = 'pourover'
            WHERE method = 'V60';
        """)

    # Создаем тип ENUM
    brewmethod = sa.Enum(
        'espresso', 'pourover', 'drip_coffee_maker', 'cezve', 'french_press',
        'mokka', 'immerse', 'in_cup', 'aeropress', 'capsules', 'drip', 'brew_bag',
        name='brewmethod'
    )
    brewmethod.create(op.get_bind())

    # Изменяем тип столбца на brewmethod с явным указанием USING
    op.alter_column('reviews', 'method',
                    type_=brewmethod,
                    existing_type=sa.VARCHAR(),
                    existing_nullable=False,
                    postgresql_using='method::brewmethod')

    # Изменяем тип столбца на FLOAT с явным указанием USING
    op.alter_column('reviews', 'grinding',
                    type_=sa.Float(),
                    existing_type=sa.VARCHAR(),
                    existing_nullable=False,
                    postgresql_using='grinding::double precision')

    op.drop_column('reviews', 'water_receipt')
    op.drop_column('reviews', 'rating_20')
    op.drop_column('reviews', 'rating_4')
    op.drop_column('reviews', 'water_pH')
    op.drop_column('reviews', 'water_ppm')
    op.drop_column('reviews', 'rating_2')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reviews', sa.Column('rating_2', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('reviews', sa.Column('water_ppm', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('reviews', sa.Column('water_pH', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('reviews', sa.Column('rating_4', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('reviews', sa.Column('rating_20', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('reviews', sa.Column('water_receipt', sa.VARCHAR(), autoincrement=False, nullable=True))

    # Возвращаем тип столбца к VARCHAR
    op.alter_column('reviews', 'grinding',
                    type_=sa.VARCHAR(),
                    existing_type=sa.Float(),
                    existing_nullable=True,
                    postgresql_using='grinding::varchar')

    # Возвращаем тип столбца к VARCHAR
    brewmethod = sa.Enum(
        'espresso', 'pourover', 'drip_coffee_maker', 'cezve', 'french_press',
        'mokka', 'immerse', 'in_cup', 'aeropress', 'capsules', 'drip', 'brew_bag',
        name='brewmethod'
    )
    op.alter_column('reviews', 'method',
                    type_=sa.VARCHAR(),
                    existing_type=brewmethod,
                    existing_nullable=True,
                    postgresql_using='method::varchar')

    # Удаляем тип ENUM
    brewmethod.drop(op.get_bind())

    op.drop_column('reviews', 'experience')
    op.drop_column('reviews', 'brew_time')
    op.drop_column('reviews', 'rating')
    op.alter_column('coffees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('coffees', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('coffees', 'notes',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'tags',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'importer',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'exporter',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('coffees', 'mill',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'cooperatives',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('coffees', 'locality',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    # ### end Alembic commands ###
