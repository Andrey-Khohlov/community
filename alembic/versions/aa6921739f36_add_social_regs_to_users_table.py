"""Add social regs to users table

Revision ID: aa6921739f36
Revises: e94d963628d0
Create Date: 2025-08-23 18:31:39.129786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aa6921739f36'
down_revision: Union[str, None] = 'e94d963628d0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('provider', sa.String(length=256), nullable=True))
    op.add_column('users', sa.Column('provider_id', sa.String(length=256), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=500), nullable=True))

    # Сначала добавляем поле как nullable
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=True))
    # Устанавливаем значение по умолчанию для существующих записей
    op.execute("UPDATE users SET is_verified = FALSE WHERE is_verified IS NULL")
    # Теперь меняем на NOT NULL
    op.alter_column('users', 'is_verified',
                    existing_type=sa.Boolean(),
                    nullable=False,
                    server_default=sa.false())

    op.add_column('users', sa.Column('locality', sa.String(length=256), nullable=True))
    op.add_column('users', sa.Column('language', sa.String(length=256), nullable=True))

    # op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    # Сначала добавляем поле как nullable
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    # Устанавливаем значение по умолчанию для существующих записей
    op.execute("UPDATE users SET is_active = TRUE WHERE is_active IS NULL")
    # Теперь меняем на NOT NULL
    op.alter_column('users', 'is_active',
                    existing_type=sa.Boolean(),
                    nullable=False,
                    server_default=sa.true())

    op.add_column('users', sa.Column('roles', sa.String(length=256), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index('idx_provider_provider_id', 'users', ['provider', 'provider_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint(None, 'users', ['provider_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_provider_provider_id', table_name='users')
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'roles')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'language')
    op.drop_column('users', 'locality')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'provider_id')
    op.drop_column('users', 'provider')

    # ### end Alembic commands ###
